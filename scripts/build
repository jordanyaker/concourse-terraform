#!/usr/bin/env bash

set -xeo pipefail

DOCKER_IMAGE_NAME="public.ecr.aws/g9q9d1i9/concourse-terraform"

build_app_image() {
  # req: app_image
  # req: terraform_version
  echo "building app image ${app_image}"
  docker \
    build \
      --rm \
      --file Dockerfile \
      --tag "${app_image}" \
      --build-arg "TERRAFORM_VERSION=${terraform_version}" \
      .
}

build_consul_image() {
  # req: app_image
  # req: consul_image
  # req: consul_version
  # req: terraform_version
  echo "building consul image ${consul_image}"
  docker \
    build \
      --rm \
      --file consul.Dockerfile \
      --tag "${consul_image}" \
      --build-arg "PARENT_IMAGE=${app_image}" \
      --build-arg "CONSUL_VERSION=${consul_version}" \
      .
}

build_test_image() {
  # req: consul_image
  # req: test_image
  echo "building test image ${test_image}"
  docker \
    build \
      --rm \
      --file test.Dockerfile \
      --build-arg "PARENT_IMAGE=${consul_image}" \
      ${PTVSD_INSTALL:+--build-arg PTVSD_INSTALL=1} \
      --tag "${test_image}" \
      .
}

# main

if [[ -n "${1:-}" ]]
then
  # build specific version
  terraform_version="${1}"
  consul_version="$(cat consul-version)"
  app_image="${DOCKER_IMAGE_NAME}:${terraform_version}"
  consul_image="${DOCKER_IMAGE_NAME}:${terraform_version}-consul"
  test_image="${DOCKER_IMAGE_NAME}-tests:${terraform_version}"

  if build_app_image
  then
    build_consul_image
    build_test_image
  fi
else
  # build all supported versions
  terraform_versions=($(cat tf-versions))
  consul_version="$(cat consul-version)"

  for terraform_version in "${terraform_versions[@]}"
  do
    app_image="${DOCKER_IMAGE_NAME}:${terraform_version}"
    consul_image="${DOCKER_IMAGE_NAME}:${terraform_version}-consul"
    test_image="${DOCKER_IMAGE_NAME}-tests:${terraform_version}"

    if build_app_image
    then
      build_consul_image
      build_test_image
    fi
  done
fi
